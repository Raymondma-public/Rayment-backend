node('haimaxy-jnlp')  {

//    environment {
//        SPRING_PROFILES_ACTIVE='prod'
//    }

   stage('Git clone'){
        SPRING_PROFILES_ACTIVE='prod'
       //echo 'Git pull'
       //checkout([$class: 'GitSCM', branches: [[name: '*/${branch}']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '${credentialsId}', url: '${url}']]])
       echo 'Git clone'
       git branch: 'master',
           credentialsId: '12345-1234-4696-af25-123455',
           url: 'https://github.com/Raymondma-public/Rayment-backend.git'
       build_tag = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
       echo "${build_tag}"
   }

   stage('Gradle Build'){
        echo 'Gradle build'
        //def buildInfo = rtGradle.run rootDir: "gradle-examples/4/gradle-example-ci-server/", buildFile: 'build.gradle', tasks: 'clean artifactoryPublish'
        if (isUnix()) {
            dir('RaymentBackend') {
                sh 'chmod a+x gradlew'
                sh './gradlew clean '
                sh './gradlew build -Dspring.profiles.active=prod'

            }
        } else {
            dir('RaymentBackend') {bat 'gradlew.bat clean build'}
        }
    }

    stage('Docker build'){
        echo 'Docker build'
        echo "${build_tag}"
        echo "${SPRING_PROFILES_ACTIVE}"
        dir('RaymentBackend') {
            sh "sed -i 's/<SPRING_PROFILES_ACTIVE>/${SPRING_PROFILES_ACTIVE}/' Dockerfile"
            sh "docker build -t rayment-backend:v${build_tag}_${env.BRANCH_NAME} ."
        }
    }
    stage('Push docker'){
        echo 'Push docker'
        dir('RaymentBackend') {
            sh "docker tag rayment-backend:v${build_tag}_${env.BRANCH_NAME} raymondmapublic/rayment-backend:v${build_tag}_${env.BRANCH_NAME}"
            sh "docker push raymondmapublic/rayment-backend:v${build_tag}_${env.BRANCH_NAME}"
        }
    }

    stage('Deploy K8s'){
            echo 'Deploy to K8s'
            dir('RaymentBackend/k8s'){
                echo "${build_tag}"
                echo "${env.BRANCH_NAME}"
                docker_images= sh(returnStdout: true, script: 'docker images')
                echo "$docker_images"
                sh "sed -i 's/<BUILD_TAG>/${build_tag}/' raymond-backend-service-deployment.yaml"
                sh "sed -i 's/<BRANCH_NAME>/${env.BRANCH_NAME}/' raymond-backend-service-deployment.yaml"
                sh "kubectl apply -f raymond-backend-service-deployment.yaml"
            }
    }

}